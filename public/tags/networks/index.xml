<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Networks on Functionally Defined</title>
    <link>/tags/networks/</link>
    <description>Recent content in Networks on Functionally Defined</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018 Allen Chang</copyright>
    <lastBuildDate>Thu, 08 Feb 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/networks/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Interactive clothing networks</title>
      <link>/posts/interactive-clothing-networks/</link>
      <pubDate>Thu, 08 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/interactive-clothing-networks/</guid>
      <description>This is the 3rd part of my analysis on daily clothing choices (part 1 and part 2). In this post I’m going to be testing out the the threejs package and creating interactive networks using the graphjs function. I will also be using David Robinson’s gganimate package to create an animated timeline of my clothing choices.
As usual, here’s the packages used.</description>
    </item>
    
    <item>
      <title>Network analysis of my daily clothing choices</title>
      <link>/posts/daily_clothing_network/</link>
      <pubDate>Sat, 06 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/daily_clothing_network/</guid>
      <description>This is a continuation of my previous analysis on tracking preferences in clothing choices (part 1 is here). The inspiration for this post came about after re-reading David Robinson’s network analysis of the movie love actually and realizing that a similar approach could be applied to my sparse network of clothing choices. I found additional help by working through the Network Analysis course on Datacamp.
As per usual, these were the packages used.</description>
    </item>
    
  </channel>
</rss>