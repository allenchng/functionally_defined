<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Networks on Functionally Defined</title>
    <link>/tags/networks/</link>
    <description>Recent content in Networks on Functionally Defined</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018 Allen Chang</copyright>
    <lastBuildDate>Tue, 30 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/networks/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Interactive clothing networks</title>
      <link>/posts/interactive-clothing-networks/</link>
      <pubDate>Tue, 30 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/interactive-clothing-networks/</guid>
      <description>This is part 3 of my exploration of preferences in clothing choices (part 1, part 2) In this post I’m going to be testing out the the threejs package and creating interactive networks using the graphjs function. I also
library(tidyverse) library(igraph) library(threejs) library(lubridate) library(stringr) library(reshape2) library(htmlwidgets) library(gganimate) Data pre-processing summer &amp;lt;- read_csv(&amp;quot;/Users/allenchang/Desktop/functionally_defined/data/summer.csv&amp;quot;) fw &amp;lt;- read_csv(&amp;quot;/Users/allenchang/Desktop/functionally_defined/data/fallwinter.csv&amp;quot;) fw &amp;lt;- fw %&amp;gt;% select(1:3) clothes_df &amp;lt;- rbind(summer, fw) clothes_df$Day &amp;lt;- mdy(clothes_df$Day) clothes_df &amp;lt;- clothes_df %&amp;gt;% mutate(maker_up = toupper(Maker)) %&amp;gt;% select(Day, maker_up) %&amp;gt;% filter(!</description>
    </item>
    
    <item>
      <title>Network analysis of my daily clothing choices</title>
      <link>/posts/daily_clothing_network/</link>
      <pubDate>Sat, 06 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/daily_clothing_network/</guid>
      <description>This is a continuation of my previous analysis on tracking preferences in clothing choices (part 1 is here). The inspiration for this post came about after re-reading David Robinson’s network analysis of the movie love actually and realizing that a similar approach could be applied to my sparse network of clothing choices. I found additional help by working through the Network Analysis course on Datacamp.
As per usual, these were the packages used.</description>
    </item>
    
  </channel>
</rss>